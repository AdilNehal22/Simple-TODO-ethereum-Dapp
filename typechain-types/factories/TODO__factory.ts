/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TODO, TODOInterface } from "../TODO";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "task",
        type: "string",
      },
    ],
    name: "addTasks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listOfTasks",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "showTasks",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061078c806100606000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80636f38c2bb1461004657806379f474da14610076578063ae982ebe14610094575b600080fd5b610060600480360381019061005b9190610361565b6100b0565b60405161006d9190610427565b60405180910390f35b61007e61015c565b60405161008b9190610555565b60405180910390f35b6100ae60048036038101906100a991906106ac565b610235565b005b600181815481106100c057600080fd5b9060005260206000200160009150905080546100db90610724565b80601f016020809104026020016040519081016040528092919081815260200182805461010790610724565b80156101545780601f1061012957610100808354040283529160200191610154565b820191906000526020600020905b81548152906001019060200180831161013757829003601f168201915b505050505081565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561022c57838290600052602060002001805461019f90610724565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb90610724565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b505050505081526020019060010190610180565b50505050905090565b600181908060018154018082558091505060019003906000526020600020016000909190919091509080519060200190610270929190610274565b5050565b82805461028090610724565b90600052602060002090601f0160209004810192826102a257600085556102e9565b82601f106102bb57805160ff19168380011785556102e9565b828001600101855582156102e9579182015b828111156102e85782518255916020019190600101906102cd565b5b5090506102f691906102fa565b5090565b5b808211156103135760008160009055506001016102fb565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61033e8161032b565b811461034957600080fd5b50565b60008135905061035b81610335565b92915050565b60006020828403121561037757610376610321565b5b60006103858482850161034c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103c85780820151818401526020810190506103ad565b838111156103d7576000848401525b50505050565b6000601f19601f8301169050919050565b60006103f98261038e565b6104038185610399565b93506104138185602086016103aa565b61041c816103dd565b840191505092915050565b6000602082019050818103600083015261044181846103ee565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b60006104918261038e565b61049b8185610475565b93506104ab8185602086016103aa565b6104b4816103dd565b840191505092915050565b60006104cb8383610486565b905092915050565b6000602082019050919050565b60006104eb82610449565b6104f58185610454565b93508360208202850161050785610465565b8060005b85811015610543578484038952815161052485826104bf565b945061052f836104d3565b925060208a0199505060018101905061050b565b50829750879550505050505092915050565b6000602082019050818103600083015261056f81846104e0565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6105b9826103dd565b810181811067ffffffffffffffff821117156105d8576105d7610581565b5b80604052505050565b60006105eb610317565b90506105f782826105b0565b919050565b600067ffffffffffffffff82111561061757610616610581565b5b610620826103dd565b9050602081019050919050565b82818337600083830152505050565b600061064f61064a846105fc565b6105e1565b90508281526020810184848401111561066b5761066a61057c565b5b61067684828561062d565b509392505050565b600082601f83011261069357610692610577565b5b81356106a384826020860161063c565b91505092915050565b6000602082840312156106c2576106c1610321565b5b600082013567ffffffffffffffff8111156106e0576106df610326565b5b6106ec8482850161067e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061073c57607f821691505b602082108114156107505761074f6106f5565b5b5091905056fea2646970667358221220846117d555aed062f15b5421dfcad3220e04d8a23e4f3e9d0bdbf1faed76abe964736f6c634300080a0033";

type TODOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TODOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TODO__factory extends ContractFactory {
  constructor(...args: TODOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TODO> {
    return super.deploy(overrides || {}) as Promise<TODO>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TODO {
    return super.attach(address) as TODO;
  }
  connect(signer: Signer): TODO__factory {
    return super.connect(signer) as TODO__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TODOInterface {
    return new utils.Interface(_abi) as TODOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): TODO {
    return new Contract(address, _abi, signerOrProvider) as TODO;
  }
}
